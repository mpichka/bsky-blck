/**
 * GENERATED BY QUICKTYPE
 * https://quicktype.io/
 */

export interface AuthenticationResponse {
  accessJwt: string;
  refreshJwt: string;
  handle: string;
  did: string;
}

export interface FollowersResponse {
  subject: Subject;
  cursor: string;
  followers: Subject[];
}

export interface Subject {
  did: string;
  handle: string;
  displayName: string;
  description: string;
  avatar: string;
  associated: Associated;
  indexedAt: Date;
  createdAt: Date;
  viewer: SubjectViewer;
  labels: Label[];
}

export interface Associated {
  lists: number;
  feedgens: number;
  starterPacks: number;
  labeler: boolean;
  chat: Chat;
}

export interface Chat {
  allowIncoming: string;
}

export interface Label {
  ver: number;
  src: string;
  uri: string;
  cid: string;
  val: string;
  neg: boolean;
  cts: Date;
  exp: Date;
  sig: string;
}

export interface SubjectViewer {
  muted: boolean;
  mutedByList: ByList;
  blockedBy: boolean;
  blocking: string;
  blockingByList: ByList;
  following: string;
  followedBy: string;
  knownFollowers: KnownFollowers;
}

export interface ByList {
  uri: string;
  cid: string;
  name: string;
  purpose: string;
  avatar: string;
  listItemCount: number;
  labels: Label[];
  viewer: BlockingByListViewer;
  indexedAt: Date;
}

export interface BlockingByListViewer {
  muted: boolean;
  blocked: string;
}

export interface KnownFollowers {
  count: number;
  followers: Follower[];
}

export interface Follower {
  did: string;
  handle: string;
  displayName: string;
  avatar: string;
  associated: Associated;
  labels: Label[];
  createdAt: Date;
}

export interface AuthorResponse {
  did: string;
  handle: string;
  displayName: string;
  description: string;
  avatar: string;
  banner: string;
  followersCount: number;
  followsCount: number;
  postsCount: number;
  associated: Associated;
  joinedViaStarterPack: JoinedViaStarterPack;
  indexedAt: Date;
  createdAt: Date;
  viewer: Viewer;
  labels: Label[];
  pinnedPost: PinnedPost;
}

export interface Associated {
  lists: number;
  feedgens: number;
  starterPacks: number;
  labeler: boolean;
  chat: Chat;
}

export interface Chat {
  allowIncoming: string;
}

export interface JoinedViaStarterPack {
  uri: string;
  cid: string;
  record: Record<string, any>;
  creator: Creator;
  listItemCount: number;
  joinedWeekCount: number;
  joinedAllTimeCount: number;
  labels: Label[];
  indexedAt: Date;
}

export interface Creator {
  did: string;
  handle: string;
  displayName: string;
  avatar: string;
  associated: Associated;
  viewer?: CreatorViewer;
  labels: Label[];
  createdAt: Date;
}

export interface Label {
  ver: number;
  src: string;
  uri: string;
  cid: string;
  val: string;
  neg: boolean;
  cts: Date;
  exp: Date;
  sig: string;
}

export interface CreatorViewer {
  muted: boolean;
  mutedByList: ByList;
  blockedBy: boolean;
  blocking: string;
  blockingByList: ByList;
  following: string;
  followedBy: string;
  knownFollowers: PurpleKnownFollowers;
}

export interface ByList {
  uri: string;
  cid: string;
  name: string;
  purpose: string;
  avatar: string;
  listItemCount: number;
  labels: Label[];
  viewer: BlockingByListViewer;
  indexedAt: Date;
}

export interface BlockingByListViewer {
  muted: boolean;
  blocked: string;
}

export interface PurpleKnownFollowers {
  count: number;
  followers: null[];
}

export interface PinnedPost {
  uri: string;
  cid: string;
}

export interface Viewer {
  muted: boolean;
  mutedByList: ByList;
  blockedBy: boolean;
  blocking: string;
  blockingByList: ByList;
  following: string;
  followedBy: string;
  knownFollowers: KnownFollowers;
}

export interface PostThreadResponse {
  thread: Thread;
  threadgate: Threadgate;
}

export interface Thread {
  post: Post;
  parent: Post;
  replies: Post[];
}

export interface Threadgate {
  uri: string;
  cid: string;
  record: Thread;
  lists: List[];
}

export interface List {
  uri: string;
  cid: string;
  name: string;
  purpose: string;
  avatar: string;
  listItemCount: number;
  labels: Label[];
  viewer: Viewer;
  indexedAt: Date;
}

export interface Label {
  ver: number;
  src: string;
  uri: string;
  cid: string;
  val: string;
  neg: boolean;
  cts: Date;
  exp: Date;
  sig: string;
}

export interface Viewer {
  muted: boolean;
  blocked: string;
}

export interface Post {
  uri: string;
  cid: string;
  author: Author;
  record: any;
  embed: any;
  replyCount: number;
  repostCount: number;
  likeCount: number;
  quoteCount: number;
  indexedAt: Date;
  viewer: PostViewer;
  labels: Label[];
  threadgate: Threadgate;
}

export interface Author {
  did: string;
  handle: string;
  displayName: string;
  avatar: string;
  associated: Associated;
  viewer: AuthorViewer;
  labels: Label[];
  createdAt: Date;
}

export interface Associated {
  lists: number;
  feedgens: number;
  starterPacks: number;
  labeler: boolean;
  chat: Chat;
}

export interface Chat {
  allowIncoming: string;
}

export interface Label {
  ver: number;
  src: string;
  uri: string;
  cid: string;
  val: string;
  neg: boolean;
  cts: Date;
  exp: Date;
  sig: string;
}

export interface AuthorViewer {
  muted: boolean;
  mutedByList: List;
  blockedBy: boolean;
  blocking: string;
  blockingByList: List;
  following: string;
  followedBy: string;
  knownFollowers: KnownFollowers;
}

export interface PostViewer {
  repost: string;
  like: string;
  threadMuted: boolean;
  replyDisabled: boolean;
  embeddingDisabled: boolean;
  pinned: boolean;
}

export interface LikesResponse {
  uri: string;
  cid: string;
  cursor: string;
  likes: Like[];
}

export interface Like {
  indexedAt: Date;
  createdAt: Date;
  actor: Actor;
}

export interface Actor {
  did: string;
  handle: string;
  displayName: string;
  description: string;
  avatar: string;
  associated: Associated;
  indexedAt: Date;
  createdAt: Date;
  viewer: ActorViewer;
  labels: Label[];
}

export interface Associated {
  lists: number;
  feedgens: number;
  starterPacks: number;
  labeler: boolean;
  chat: Chat;
}

export interface Chat {
  allowIncoming: string;
}

export interface Label {
  ver: number;
  src: string;
  uri: string;
  cid: string;
  val: string;
  neg: boolean;
  cts: Date;
  exp: Date;
  sig: string;
}

export interface ActorViewer {
  muted: boolean;
  mutedByList: ByList;
  blockedBy: boolean;
  blocking: string;
  blockingByList: ByList;
  following: string;
  followedBy: string;
  knownFollowers: KnownFollowers;
}

export interface ByList {
  uri: string;
  cid: string;
  name: string;
  purpose: string;
  avatar: string;
  listItemCount: number;
  labels: Label[];
  viewer: BlockingByListViewer;
  indexedAt: Date;
}

export interface BlockingByListViewer {
  muted: boolean;
  blocked: string;
}

export interface KnownFollowers {
  count: number;
  followers: Follower[];
}

export interface Follower {
  did: string;
  handle: string;
  displayName: string;
  avatar: string;
  associated: Associated;
  labels: Label[];
  createdAt: Date;
}

export interface AuthorFeedResponse {
  cursor: string;
  feed: { post: Post }[];
}

export interface Feed {
  uri: string;
  cid: string;
  did: string;
  creator: Creator;
  displayName: string;
  description: string;
  descriptionFacets: DescriptionFacet[];
  avatar: string;
  likeCount: number;
  acceptsInteractions: boolean;
  labels: Label[];
  viewer: FeedViewer;
  indexedAt: Date;
}

export interface Associated {
  lists: number;
  feedgens: number;
  starterPacks: number;
  labeler: boolean;
  chat: Chat;
}

export interface Chat {
  allowIncoming: string;
}

export interface Label {
  ver: number;
  src: string;
  uri: string;
  cid: string;
  val: string;
  neg: boolean;
  cts: Date;
  exp: Date;
  sig: string;
}

export interface ByList {
  uri: string;
  cid: string;
  name: string;
  purpose: string;
  avatar: string;
  listItemCount: number;
  labels: Label[];
  viewer: BlockingByListViewer;
  indexedAt: Date;
}

export interface BlockingByListViewer {
  muted: boolean;
  blocked: string;
}

export interface Follower {
  did: string;
  handle: string;
  displayName: string;
  avatar: string;
  associated: Associated;
  labels: Label[];
  createdAt: Date;
}

export interface DescriptionFacet {
  index: Index;
  features: any[];
}

export interface Index {
  byteStart: number;
  byteEnd: number;
}

export interface FeedViewer {
  like: string;
}

export interface RepostsResponse {
  uri: string;
  cid: string;
  cursor: string;
  repostedBy: RepostedBy[];
}

export interface RepostedBy {
  did: string;
  handle: string;
  displayName: string;
  description: string;
  avatar: string;
  associated: Associated;
  indexedAt: Date;
  createdAt: Date;
  viewer: RepostedByViewer;
  labels: Label[];
}

export interface Associated {
  lists: number;
  feedgens: number;
  starterPacks: number;
  labeler: boolean;
  chat: Chat;
}

export interface Chat {
  allowIncoming: string;
}

export interface Label {
  ver: number;
  src: string;
  uri: string;
  cid: string;
  val: string;
  neg: boolean;
  cts: Date;
  exp: Date;
  sig: string;
}

export interface RepostedByViewer {
  muted: boolean;
  mutedByList: ByList;
  blockedBy: boolean;
  blocking: string;
  blockingByList: ByList;
  following: string;
  followedBy: string;
  knownFollowers: KnownFollowers;
}

export interface ByList {
  uri: string;
  cid: string;
  name: string;
  purpose: string;
  avatar: string;
  listItemCount: number;
  labels: Label[];
  viewer: BlockingByListViewer;
  indexedAt: Date;
}

export interface BlockingByListViewer {
  muted: boolean;
  blocked: string;
}

export interface KnownFollowers {
  count: number;
  followers: Follower[];
}

export interface Follower {
  did: string;
  handle: string;
  displayName: string;
  avatar: string;
  associated: Associated;
  labels: Label[];
  createdAt: Date;
}
